/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-01-11 08:53:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\t<title>登录页面</title>\n");
      out.write("    <!-- 控制移动端浏览器视口的大小和缩放 -->\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <!-- Bootstrap -->\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <!--  jQuery文件务必在bootstrap.min.js 之前引入  -->\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/js/jquery-2.2.3.min.js\"></script>\n");
      out.write("    <!-- 最新的 Bootstrap 核心 JavaScript 文件 -->\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/js/bootstrap.min.js\"></script>\n");
      out.write("    <!-- 引入login.css -->\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/css/login.css\" rel=\"stylesheet\">\n");
      out.write("     <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/js/jquery.form.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/js/login.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t\n");
      out.write("\t<!-- 遮盖层 -->\n");
      out.write("\t<div id=\"blackbox\"></div>\n");
      out.write("\t\n");
      out.write("\t<!-- 清除设置透明度的继承影响 -->\n");
      out.write("\t<div class=\"emptybox\"></div>\n");
      out.write("\t<div class=\"loginbox\">\n");
      out.write("\t\t<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/img/logo.png\" class=\"logo\" />\n");
      out.write("\n");
      out.write("\t\t<!--登录表单-->\n");
      out.write("\t\t<!-- action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/dologin.action\" -->\n");
      out.write("\t\t<form class=\"form-horizontal login_form\" method=\"post\" role=\"form\">\n");
      out.write("\t\t\t<div style=\"color: white;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label class=\"col-sm-6 font_wei font_14\">邮箱/手机号码</label><br>\n");
      out.write("\t\t\t\t<div class=\"col-sm-12\">\n");
      out.write("\t\t\t\t\t<input id=\"login_account\" type=\"text\" class=\"form-control textinput\" name=\"account\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label class=\"col-sm-6 font_wei font_14\">密码</label><br>\n");
      out.write("\t\t\t\t<div class=\"col-sm-12\">\n");
      out.write("\t\t\t\t\t<input id=\"login_pwd\" type=\"password\" class=\"form-control textinput\"\n");
      out.write("\t\t\t\t\t\tname=\"password\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<div class=\"col-sm-6\">\n");
      out.write("\t\t\t\t\t<div class=\"checkbox\">\n");
      out.write("\t\t\t\t\t\t<label> <input type=\"checkbox\" class=\"checkbox_input\">记住密码\n");
      out.write("\t\t\t\t\t\t</label>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"col-sm-6\">\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"forget_text font_12\">忘记密码</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<div class=\"col-sm-12\">\n");
      out.write("\t\t\t\t\t<button id=\"login_submit\" type=\"submit\" class=\"btn btn-default col-sm-12 btn_input\">登录</button>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"col-sm-offset-3 col-sm-9\" style=\"color: white\">\n");
      out.write("\t\t\t\t尚未有账户？<a href=\"#\" style=\"color: #b37529\" onclick=\"moveout()\">注册</a>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</form>\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<!--右侧滑出的注册页-->\n");
      out.write("\t<div id=\"register_box\">\n");
      out.write("\t\t<div class=\"register_content\">\n");
      out.write("\t\t\t<div class=\"register_head\">\n");
      out.write("\t\t\t\t<a href=\"#\" class=\"col-sm-3\" onclick=\"movein()\"></a>\n");
      out.write("\t\t\t\t<p class=\"font_wei col-sm-9\">账户注册</p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"col-sm-offset-2 col-sm-10\">\n");
      out.write("\t\t\t\t<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/user/img/blacklogo.png\" alt=\"logo\" />\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"clear\"></div>\n");
      out.write("\t\t\t<!--注册表单-->\n");
      out.write("\t\t\t<form id=\"register_form\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/doregister.action\" onsubmit=\"return checkAccount()&&checkPwd()\" \n");
      out.write("\t\t\tclass=\"form-horizontal register_form\" method=\"post\" role=\"form\">\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<label for=\"regs_account\" class=\"col-sm-12 font_wei color_grey\">电子邮箱/手机号码</label><br>\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12\">\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control register_text\"\n");
      out.write("\t\t\t\t\t\t\tname=\"account\" id=\"regs_account\" onblur=\" checkAccount()\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12 font_wei font_12\" id=\"account_error\">您输入的邮箱或号码格式有误,请检查后再输入</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<label for=\"pwd\" class=\"col-sm-12 font_wei color_grey \">创建密码</label><br>\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12\">\n");
      out.write("\t\t\t\t\t\t<input name=\"password\" type=\"password\" class=\"form-control register_text\" id=\"pwd\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<label for=\"secpwd\" class=\"col-sm-12 font_wei color_grey\">确认密码</label><br>\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12\">\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"form-control register_text\"\n");
      out.write("\t\t\t\t\t\t\tname=\"confirmpwd\" id=\"secpwd\" onblur=\"checkPwd()\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12 font_wei font_12\" id=\"pwd_error\">两次密码输入不一致</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<label for=\"code\" class=\"col-sm-12 font_wei color_grey\">输入验证码</label><br>\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-6\">\n");
      out.write("\t\t\t\t\t\t<input name=\"code\" type=\"text\" class=\"form-control register_text\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-6\">\n");
      out.write("\t\t\t\t\t\t<img id=\"code\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/code/");
      out.print(new Date() );
      out.write(".action\" alt=\"code\"  onclick=\"refreshCode()\"/>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12\">\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\"\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn btn-default col-sm-12 register_btn font_wei\">注册</button>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\t$(\"#login_submit\").click(function() {\n");
      out.write("\t\tvar account = $(\"#login_account\").val();\n");
      out.write("\t\tvar pwd = $(\"#login_pwd\").val();\n");
      out.write("\t\tif ((account != null&&account!=\"\") && (pwd != null&&pwd!=\"\")) {\n");
      out.write("\t\t/* \t\n");
      out.write("\t\t\t$.ajax({ //一个Ajax过程   \n");
      out.write("\t\t\t\ttype: \"post\", //以post方式与后台沟通   \n");
      out.write("\t\t\t\turl : \"/moment/user/dologin.action\", \n");
      out.write("\t\t\t\t//dataType:'json',//返回的值以 JSON方式 解释   \n");
      out.write("\t\t\t\t//data: 'account='+account+'&password='+password,\n");
      out.write("\t\t\t\tdata:{\"account\":account,\"password\":pwd},\n");
      out.write("\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t//如果调用失败   \n");
      out.write("\t\t\t\t\tdataobj=JSON.parse(data);\n");
      out.write("\t\t\t\t\tif (dataobj.status == 1) {\n");
      out.write("\t\t\t\t\t\talert(\"aaa\");\n");
      out.write("\t\t\t\t\t\twindow.location.href=\"/moment/user/index.action\";\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\talert(dataobj.status);\n");
      out.write("\t\t\t\t\t}  \n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\talert(\"登陆失败\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t});  \n");
      out.write("\t\t\t */\n");
      out.write("\t\t\tvar options={\n");
      out.write("\t\t\t\t\ttarget:null,\n");
      out.write("\t\t\t\t\turl:\"/moment/user/dologin.action\",\n");
      out.write("\t\t\t\t\tsuccess:function(data){\n");
      out.write("\t\t\t\t\t\tdataobj=JSON.parse(data);\n");
      out.write("\t\t\t\t\t\tif(dataobj.status==1){\n");
      out.write("\t\t\t\t\t\t\twindow.location.href=\"/moment/user/index.action\";\n");
      out.write("\t\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\t\talert(dataobj.msg);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\terror:function(responseTxt,statusTxt,XMLHttpRequest){\n");
      out.write("\t\t\t\t\t\talert(\"登录失败\");\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t};\n");
      out.write("\t\t\t//使用表单控件，进行异步更新数据\n");
      out.write("\t\t\t$('.login_form').ajaxSubmit(options);\n");
      out.write("\t\t\t//防止页面进行刷新\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\talert(\"请完善提交信息\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
